name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install GNU Arm Embedded Toolchain
      # You may pin to the exact commit or the version.
      # uses: marvinschopf/install-gcc-arm-none-eabi@b457edf6975b4f0330154de9420a32c31a0498aa
      uses: marvinschopf/install-gcc-arm-none-eabi@v1.0.0

    - name: Configure CMake
      # Configure CMake in a 'bin' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/bin -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

#    - name: Restore build number
#      uses: actions/download-artifact@v2.0.10
#      with:
#        name: build-number-cache
#        path: ${{github.workspace}}/testbench/build-number.cache

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

#    - name: Store build number
#      uses: actions/upload-artifact@v2.2.4
#      with:
#        name: build-number-cache
#        path: ${{github.workspace}}/testbench/build-number.cache
  
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: ${{github.workspace}}/bin/varikey.hex
